#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null || { printf '%b' '\033[1;31m' >&2; echo "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd): The required dependency ember-shared could not be found (or ember_bash_setup could not be sourced for some other reason)." >&2; printf '%b' '\033[0m' >&2; exit 1; }
#set -x

trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."' ERR

# Takes a StageL file as first argument, and prints out equivalent code in the language of the second argument (bash/js).

cache="--cache"
if [[ "$1" == "--cache" ]]; then
    cache="--cache"
    shift
    cacheDir="$1"
    shift
elif [[ "$1" == "--no-cache" ]]; then
    cache="--no-cache"
    shift
fi
debugBuild="--debug"
if [[ "$1" == "--debug" ]]; then
    debugBuild="--debug"
    shift
elif [[ "$1" == "--no-debug" ]]; then
    debugBuild="--no-debug"
    shift
fi
typecheckBuild="--runtime-type-checks"
if [[ "$1" == "--runtime-type-checks" ]]; then
    typecheckBuild="--runtime-type-checks"
    shift
elif [[ "$1" == "--no-runtime-type-checks" ]]; then
    typecheckBuild="--no-runtime-type-checks"
    shift
fi

inputFile="$(readlink -f "$1")"
targetLang="$2"

# Try to cd to the directory the stagel-convert script is stored in. Based on https://stackoverflow.com/questions/59895/get-the-source-directory-of-a-bash-script-from-within-the-script-itself
cd "$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )" || true

if [[ "--cache" == "$cache" ]]; then
    inputHash="$(sha512sum < "$inputFile" | awk '{print $1;}')"
    configHash="$(sha512sum < "$inputFile" | awk '{print $1;}')"
    mkdir -p "$cacheDir/1/$inputHash/$configHash"
fi

parseCmd="stagel-bootstrap-parse"
[[ -f "./stagel-bootstrap-parse" ]] && parseCmd=./"$parseCmd"

codegenCmd="stagel-bootstrap-codegen"
[[ -f "./stagel-bootstrap-codegen" ]] && codegenCmd=./"$codegenCmd"

"$parseCmd" -q "$inputFile" | "$codegenCmd" "$debugBuild" "$typecheckBuild" "$targetLang"
