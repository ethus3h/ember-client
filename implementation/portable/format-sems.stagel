r/an/dcaFromSems an/content
    assertIsByteArray an/content
    new an/ret

    # Accepts an array of bytes of a SEMS format document. Returns an array of Dcs.

    new s/parserState
    set s/parserState 'dc'
    new s/currentDc
    set s/currentDc ''
    new n/contentLength
    set n/contentLength count an/content
    new n/byteOffset
    new n/currentByte
    while lt n/byteOffset n/contentLength
        # do something with each byte in the array. an/content[n/byteOffset], which is copied to n/currentByte, holds the decimal value of the given byte. These are Dcs encoded as ASCII text bytes, rather than an array of Dcs.
        set n/currentByte get an/content n/byteOffset
        if eq s/parserState 'dc'
            if asciiIsDigit n/currentByte
                set s/currentDc cat s/currentDc charFromByte n/currentByte
            elif asciiIsSpace n/currentByte
                set an/ret push an/ret intFromIntStr s/currentDc
                set s/currentDc ''
            elif eq 35 n/currentByte
                # pound sign: start comment
                if ne 0 len s/currentDc
                    # Comment was not preceded by a space
                    if eq 'true' getSettingForFormat 'sems' 'in' 'strict'
                        die 'No trailing space present in sems format while importing. This is not allowed in strict mode.'
                    set an/ret push an/ret intFromIntStr s/currentDc
                set an/ret push an/ret 246
                set s/parserState 'comment'
            else
                die 'Unexpected parser state in SEMS document.'
        elif eq s/parserState 'comment'
            if asciiIsNewline n/currentByte
                set an/ret push an/ret 248
                set s/parserState 'dc'
            else
                set an/ret push an/ret dcFromFormat 'unicode' anFromN firstCharOfUtf8String anSubset an/content n/byteOffset -1
        else
            die 'Internal error: unexpected parser state while parsing SEMS document'
        set n/byteOffset add n/byteOffset 1
    if eq s/parserState 'comment'
        # Document ended with a comment and no newline at the end
        if ne 0 len s/currentDc
            die 'Internal error while parsing sems document: Unconsumed characters were left over when the end of the document was found.'
        set an/ret push an/ret 248
    elif ne 0 len s/currentDc
        if eq 'true' getSettingForFormat 'sems' 'in' 'strict'
            die 'No trailing space present in sems format while importing. This is not allowed in strict mode.'
        # Ended without a trailing space
        set an/ret push an/ret intFromIntStr s/currentDc
    assertIsDcArray an/ret
    return an/ret

r/an/dcaToSems an/dcIn
    assertIsDcArray an/dcIn
    # TODO: Support SEMS comment roundtripping
    new an/out
    new n/len
    set n/len count an/dcIn
    new n/inputIndex
    set n/inputIndex 0
    while lt n/inputIndex n/len
        set an/out push an/out strToByteArray cat strFrom get an/dcIn n/inputIndex } } ' '
        set n/inputIndex add n/inputIndex 1
    assertIsByteArray an/out
    return an/out
