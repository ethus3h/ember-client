r/as/listInputFormats
    new as/res
    set as/res dcDataFilterByValueGreater 'formats' 3 0 1
    return as/res

r/b/isSupportedInputFormat s/in
    new b/res
    set b/res contains listInputFormats } s/in
    return b/res

r/as/listInternalFormats
    new as/res
    set as/res dcDataFilterByValue 'formats' 6 'internal' 1
    return as/res

r/b/isSupportedInternalFormat s/in
    new b/res
    set b/res or contains listInputFormats } s/in } contains listInternalFormats } s/in
    return b/res

r/as/listOutputFormats
    new as/res
    set as/res dcDataFilterByValueGreater 'formats' 4 0 1
    return as/res

r/b/isSupportedOutputFormat s/in
    new b/res
    set b/res contains listOutputFormats } s/in
    return b/res

r/as/listCharEncodings
    new as/res
    set as/res dcDataFilterByValue 'formats' 6 'encoding' 1
    return as/res

r/b/isSupportedCharEncoding s/in
    # Specifically, is it a supported character encoding for the output environment.
    new b/res
    set b/res and contains listCharEncodings } s/in } isSupportedOutputFormat s/in
    return b/res

r/as/listTerminalTypes
    new as/res
    set as/res dcDataFilterByValue 'formats' 6 'terminal' 1
    return as/res

r/b/isSupportedTerminalType s/in
    # Specifically, is it a supported terminal type for the output environment.
    new b/res
    set b/res and contains listTerminalTypes } s/in } isSupportedOutputFormat s/in
    return b/res

r/as/listDataTypes
    new as/res
    set as/res dcDataFilterByValue 'formats' 6 'data' 1
    return as/res

r/n/getFormatId s/format
    new n/res
    set n/res intFromIntStr dcDataLookupByValue 'formats' 1 s/format 0
    return n/res

r/s/getFormatExtension s/format
    new s/res
    set s/res dcDataLookupById 'formats' getFormatId s/format } 2
    return s/res
