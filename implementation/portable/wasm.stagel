# For now, I'm inclined to skip implementing wasm right now, and just have a stub interface here. It seems well specced and portable, so I think it *can* be at some point. It would be nice if it were already implemented in StageL, but I might have to do that later.
# Copies of the current versions as of this writing (latest git commits) of wac, WebAssembly spec, and dependencies are included in work-docs/wasm for easy access, and are covered under their respective licenses. The following repositories are there:
# https://github.com/kanaka/wac
# https://github.com/kanaka/fooboot
# https://github.com/WebAssembly/wabt
# https://github.com/WebAssembly/spec
# https://github.com/WebAssembly/testsuite
# https://github.com/google/googletest
# https://github.com/dabeaz/ply

r/n/wasmCall s/routine n/val
    new n/res
    set n/res internalWasmCall s/routine n/val
    return nan/res

r/n/wasmCallArrIn s/routine an/vals
    new n/res
    set n/res internalWasmCallArrIn s/routine n/val
    return nan/res

r/an/wasmCallArrOut s/routine n/val
    new an/res
    set n/res internalWasmCallArrOut s/routine n/val
    return an/res

r/an/wasmCallArrInOut s/routine an/vals
    new an/res
    set n/res internalWasmCallArrInOut s/routine n/val
    return an/res
