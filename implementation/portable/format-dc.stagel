r/b/isDc g/in
    if not isInt g/in
        return false
    new n/num
    set n/num g/in
    new b/res
    set b/res isNonnegative n/num
    return b/res

r/b/isKnownDc g/in
    if not isDc g/in
        return false
    if gt g/in maximumKnownDc
        return false
    return true

r/n/maximumKnownDc
    new s/res
    set s/res dcDatasetLength 'DcData'
    return s/res

r/b/dcIsNewline n/dc
    assertIsDc n/dc
    # We can't just use:
    #if eq 'B' dcGetBidiClass n/dc
    #    return true
    # because that means "Paragraph_Separator" bidi class, and includes some things that aren't newlines (information separator two through four, and whether U+2029 Paragraph Separator should be considered a newline is debatable), and does not include some things that are ()
    return false

r/b/dcIsSpace n/dc
    assertIsDc n/dc
    if eq 'Zs' dcGetType n/dc
        return true
    return false

r/b/dcIsPrintable n/dc
    assertIsDc n/dc
    new s/type
    set s/type dcGetType n/dc
    new s/generalType
    set s/generalType strChar s/type 0
    if or eq 'Zl' s/type } eq 'Zp' s/type
        return false
    if or eq '!' s/generalType } eq 'C' s/generalType
        return false
    return true
