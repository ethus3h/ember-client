<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <link href="/m.css" rel="stylesheet" type="text/css">
    <meta content="@FMWTK_SITE_NAME@" name="author">
    <meta content="width=device-width, height=device-height, user-scalable=yes" name="viewport">
    <meta name="generator" content="Futuramerlin Web Toolkit @FMWTK_VERSION@" />
    <title>@FMWTK_SITE_NAME@</title>

    <!-- third-party code: CSV parser -->
    <script src="papaparse.js" type="text/javascript"></script>

    <!-- Merged EITE implementation, including StageL and StageR -->
    <script src="eite.js" type="text/javascript"></script>

    <!-- And the code specific to this page -->
    <script>
        // @license magnet:?xt=urn:btih:0b31508aeb0634b347b8270c7bee4d411b5d4109&dn=agpl-3.0.txt AGPL-3.0

        window.onload = function() {
            (async function(){
                let dcNames=[];
                await setupIfNeeded();
                dcNames=await dcGetColumn('DcData', 1);
                //console.log(dcNames);
                document.getElementById('inputarea').disabled=false;
                document.getElementById('UploadDocument').disabled=false;
                document.getElementById('DownloadDocument').disabled=false;
                document.getElementById('RunDocument').disabled=false;
                ioFormat=document.getElementById('ioFormat');
                ioFormat.innerHTML='';
                let formats=[];
                formats = await listInputFormats();
                for (i=0;i<Object.keys(formats).length;i++) {
                    let elem=document.createElement('option');
                    elem.innerHTML=formats[i];
                    ioFormat.appendChild(elem);
                }
                ioFormat.disabled=false;
                window.setTimeout(function(){
                    let overlay=document.getElementById('overlay');
                    overlay.style.opacity=0;
                    overlay.style.transform='scale(3)';
                    let overlayLoadingSpinner=document.getElementById('overlayLoadingSpinner');
                    overlayLoadingSpinner.style.opacity=0;
                    window.setTimeout(function(){document.getElementById('overlay').remove()},1500);
                }, 500);
            })();
        };

        async function RunDocumentHandler() {
            // Display loading spinner
            document.getElementById('inputarea').disabled='true';
            document.getElementById('UploadDocument').disabled='true';
            document.getElementById('DownloadDocument').disabled='true';
            document.getElementById('RunDocument').disabled='true';
            document.getElementById('ioFormat').disabled='true';
            document.getElementById('eiteDocumentRoot').innerHTML = '';
            document.getElementById('eiteDocumentRoot').appendChild(document.importNode(document.getElementById('documentRootLoadingSpinnerTemplate').content, true));

            // Timeout is an awful hack to give the browser time to start displaying the loading spinner. There should be a better way to do this, but I don't know what it is. This method would presumably break on slower computers.
            window.setTimeout(async function(){
                // Do the computation-heavy work
                await runDocument(await importDocument('sems', await strToByteArray(document.getElementById('inputarea').value)));

                // Remove the loading spinner
                document.getElementById('eiteDocumentRoot').style.backgroundColor="white";
                document.getElementById('inputarea').disabled=false;
                document.getElementById('UploadDocument').disabled=false;
                document.getElementById('DownloadDocument').disabled=false;
                document.getElementById('RunDocument').disabled=false;
                document.getElementById('ioFormat').disabled=false;
            }, 200);
        };

        function UploadDocument() {
        };

        function DownloadDocument() {
        };

        // @license-end
    </script>
    <style>
        .loadingSpinner {
            position: relative;
        }
        #mainBox {
            display:flex;height:100vh;width:100vw;position:fixed;top:0;left:0;
        }
        #DcSelection {
            background:rgba(0,0,0,0.3);
            display:flex;flex-direction:column;
        }
        #DcSelection > span {
            font-size: 1.8rem;
            font-weight: bold;
            text-shadow: 0 0 0.5rem white, 0 0 1rem white, 0 0 1rem white, 0 0 1rem white, 0 0 2rem white, 0 0 2rem white;
            text-align:center;
            background-color:rgba(255,255,255,0.5);
        }
        #editorColumn {
            display:flex;flex-direction:column;
        }
        #editorButtons {
            display:flex;flex-direction:row;
        }
        #editorButtons > button {
            width: 100%;
        }
        #mainBox > div, #mainBox > p, #inputarea {
            height: 100%;
            width: 100%;
        }
        #eiteDocumentRoot {
            border: 0.5rem solid rgba(255,255,255,0.9);background-color:white;background-clip:content-box;font-size: 3rem;
            transition: background-color 0.1s;
            position: relative;
        }
        #inputarea {
            /* background-color: rgba(255,255,255,0.9);*/
            background-color: white;
            border: 0;
        }
        #mainBox::before {
            background:-moz-element(#background) no-repeat fixed;
            filter:url(#f1);
            content: ' ';
            width: calc(100% + 6rem);
            height: calc(100% + 6rem);
            position: absolute;
            top: -3rem;
            left: -3rem;
            clip-path: inset(3rem 3rem 3rem 3rem);
            z-index: -1;
        }
        #background {
            /* background-image: url('https://github.com/ethus3h/wreathe-backgrounds/raw/master/Backgrounds/DSCN0001.JPG');*/
            background-image: url('/Wreathe/Backgrounds/DSCN0001.JPG');
            background-size: cover;
            position: fixed;
            top: 0;
            left: 0;
            z-index: -1;
            width: 100vw;
            height: 100vh;
        }
        button {
            background-color: rgba(255,255,255,0.7);
            border-width: 0 0 0.1rem 0;
            border-color: white;
            border-style: solid;
            transition: 0.1s all;
            position: relative;
            font-size: 1.5rem;
            padding: 0.5rem;
        }
        button:not(:first-of-type)::before {
            content: ' ';
            display: block;
            height: 100%;
            float: left;
            position: absolute;
            width: 0.1rem;
            background-color: white;
            top: 0;
            left: 0;
        }
        button:hover {
            background-color: rgba(255,255,255,0.8);
        }
        button:active {
            background-color: rgba(200,200,200,0.7);
        }
        #svgFilter {
            height: 0;
        }
        #overlay {
            width: 100vw;
            height: 100vh;
            top: 0;
            left: 0;
            position: fixed;
            background-color:rgb(227,205,171);
            z-index: 100;
            transition: all 0.7s ease;
        }
        #overlay::after {
            content: ' ';
            width: 100vw;
            height: 100vh;
            top: 0;
            left: 0;
            position: fixed;
            z-index: 101;
            opacity: 0.5;
            background-image: url('/Wreathe/Backgrounds/DSCN0001.JPG');
            background-size: cover;
        }
    </style>
</head>
<body>
<h1>IT environment: edit document tool</h1>

<p class="breadcrumbs">Page location:
    <span><a href="/">Home</a></span>
</p>
<div id="overlay"><div id="overlayLoadingSpinner" class="loadingSpinner" style="background-color:#e3cdab;transform:all 0.2s;"></div></div>
<section id="mainBox">
    <div id="DcSelection">
        <span>Click to insert</span>
    </div>
    <div id="editorColumn">
        <textarea id="inputarea" disabled="true"></textarea>
        <select id="ioFormat" disabled="true">
            <option value="">Unimplemented</option>
        </select>
        <div id="editorButtons">
            <button disabled="true" id="UploadDocument" onClick="UploadDocument();">Upload</button>
            <button disabled="true" id="DownloadDocument" onClick="DownloadDocument();">Download</button>
            <button disabled="true" id="RunDocument" onClick="RunDocumentHandler();">Run</button>
        </div>
    </div>
    <p id="eiteDocumentRoot"></p>
</section>
<svg xmlns="http://www.w3.org/2000/svg" version="1.1" id="svgFilter">
    <defs>
        <filter id="f1" x="0" y="0">
            <feGaussianBlur in="SourceGraphic" stdDeviation="2" />
            <feComponentTransfer>
                <feFuncA type="discrete" tableValues="1 1"/>
            </feComponentTransfer>
        </filter>
    </defs>
</svg>
<div id="background"></div>
<template id="documentRootLoadingSpinnerTemplate"><div id="documentRootOverlay" style="width:100%;height:100%;position:absolute;top:0;left:0;background-color:#e3cdab;"><div class="loadingSpinner" style="background-color:#e3cdab;"></div></div></template>
</body>
</html>
