dependency tree for intFromBase36Char:
    internalDebugCollect
        none

    internalDebugStackEnter
        implDie
        internalDebugFlush
        internalDebugQuiet

    assertIsStr
        assertionFailed

    assertIsInt
        assertionFailed

    assertIsChar
        internalDebugCollect
        internalDebugStackEnter
        assertIsStr
        assertIsTrue
        isChar
        internalDebugStackExit

    strToUpper
        internalDebugCollect
        internalDebugStackEnter
        assertIsStr
        len
        implLt
        implCat
        charToUpper
        strCharAtPos
        implAdd
        assertIsStr
        internalDebugStackExit

    byteFromChar
        assertIsStr
        assertIsTrue
        assertIsInt

    ge
        internalDebugCollect
        internalDebugStackEnter
        assertIsInt
        implEq
        or
        implGt
        assertIsBool
        internalDebugStackExit

    implGt
        assertIsInt
        assertIsBool

    implDie
        implError

    implCat
    
async function implCat(strA, strB) {
    assertIsStr(strA); assertIsStr(strB); let strReturn;

    strReturn = strA + "" + strB; await assertIsStr(strReturn); return strReturn;
}

    implSub
    
async function implSub(intA, intB) {
    assertIsInt(intA); assertIsInt(intB); let intReturn;

    intReturn = intA - intB; await assertIsInt(intReturn); return intReturn;
}

    implNot
    
async function implNot(boolA) {
    assertIsBool(boolA); let boolReturn;

    boolReturn = !boolA; await assertIsBool(boolReturn); return boolReturn;
}
    intIsBetween
    implNot
    internalDebugStackExit
