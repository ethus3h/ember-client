+(0) ./stagel-bootstrap-codegen::863:codegenStatus='State: code:1, token #12 (4:6:1): command (34): until (35)'
+(0) ./stagel-bootstrap-codegen::864:codegenDebug
+(0) ./stagel-bootstrap-codegen:codegenDebug:201:echo 'State: code:1, token #12 (4:6:1): command (34): until (35) (Debug info: Codegen: , routine : / Args:  / States: root code routine-definition-end code / Blocks: root  / Arglist:  / (true/indent-deferred/true).)'
State: code:1, token #12 (4:6:1): command (34): until (35) (Debug info: Codegen: , routine : / Args:  / States: root code routine-definition-end code / Blocks: root  / Arglist:  / (true/indent-deferred/true).)
+(0) ./stagel-bootstrap-codegen::866:[[ command == \f\i\l\e\n\a\m\e ]]
+(1) ./stagel-bootstrap-codegen::868:[[ command == \c\o\m\m\e\n\t ]]
+(1) ./stagel-bootstrap-codegen::871:[[ command == \l\i\t\e\r\a\l\-\a\b\-\s\t\a\r\t ]]
+(1) ./stagel-bootstrap-codegen::874:[[ command == \l\i\t\e\r\a\l\-\a\n\-\s\t\a\r\t ]]
+(1) ./stagel-bootstrap-codegen::877:[[ command == \l\i\t\e\r\a\l\-\a\s\-\s\t\a\r\t ]]
+(1) ./stagel-bootstrap-codegen::881:case "${stateStack[-1]}" in
+(1) ./stagel-bootstrap-codegen::958:echo 'Working on code'
Working on code
+(0) ./stagel-bootstrap-codegen::959:case "${tokens[$i - 1]}" in
+(0) ./stagel-bootstrap-codegen::988:codegenRoutineName=until
+(0) ./stagel-bootstrap-codegen::989:case "${tokens[$i]}" in
+(0) ./stagel-bootstrap-codegen::991:stateStack+=("test")
+(0) ./stagel-bootstrap-codegen::992:blockStack+=("test" "${tokens[$i]}")
+(0) ./stagel-bootstrap-codegen::993:codegenCommandInvocationStart
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationStart:502:codegenDebug 'Command invocation start'
+(0) ./stagel-bootstrap-codegen:codegenDebug:201:echo 'State: code:1, token #12 (4:6:1): command (34): until (35) (Debug info: Codegen: Command invocation start, routine :until / Args: Command invocation start / States: root code routine-definition-end code test / Blocks: root  test until / Arglist:  / (true/indent-deferred/true).)'
State: code:1, token #12 (4:6:1): command (34): until (35) (Debug info: Codegen: Command invocation start, routine :until / Args: Command invocation start / States: root code routine-definition-end code test / Blocks: root  test until / Arglist:  / (true/indent-deferred/true).)
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationStart:503:case "$codegenRoutineName" in
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationStart:591:codegenPrintIndentationSpaces
+(0) ./stagel-bootstrap-codegen:codegenPrintIndentationSpaces:332:(( j=0 ))
+(0) ./stagel-bootstrap-codegen:codegenPrintIndentationSpaces:332:(( j<codegenIndent ))
+(0) ./stagel-bootstrap-codegen:codegenPrintIndentationSpaces:333:[[ '' == \-\-\f\o\r\c\e ]]
+(1) ./stagel-bootstrap-codegen:codegenPrintIndentationSpaces:333:codegenOnNewLine
+(1) ./stagel-bootstrap-codegen:codegenOnNewLine:183:[[ true == \t\r\u\e ]]
+(0) ./stagel-bootstrap-codegen:codegenPrintIndentationSpaces:334:codegenOutput '    '
+(0) ./stagel-bootstrap-codegen:codegenOutput:187:echo '(codegenOutput:     )'
(codegenOutput:     )
+(0) ./stagel-bootstrap-codegen:codegenOutput:188:print '    '
+(0) /usr/bin/ember_bash_setup:print:135:printf %s '    '
+(0) ./stagel-bootstrap-codegen:codegenOutput:189:[[      == *\
 ]]
+(1) ./stagel-bootstrap-codegen:codegenOutput:192:[[ true == \t\r\u\e ]]
+(0) ./stagel-bootstrap-codegen:codegenOutput:192:[[      == *\ \ \ \  ]]
+(0) ./stagel-bootstrap-codegen:codegenOutput:193:codegenNewLine=true
+(0) ./stagel-bootstrap-codegen:codegenOutput:194:codegenNewlineLookingForSpaces=true
+(0) ./stagel-bootstrap-codegen:codegenPrintIndentationSpaces:332:(( j++  ))
+(0) ./stagel-bootstrap-codegen:codegenPrintIndentationSpaces:332:(( j<codegenIndent ))
+(0) ./stagel-bootstrap-codegen:codegenPrintIndentationSpaces:337:true
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationStart:592:codegenOutput 'while (!('
+(0) ./stagel-bootstrap-codegen:codegenOutput:187:echo '(codegenOutput: while (!()'
(codegenOutput: while (!()
+(0) ./stagel-bootstrap-codegen:codegenOutput:188:print 'while (!('
+(0) /usr/bin/ember_bash_setup:print:135:printf %s 'while (!('
+(0) ./stagel-bootstrap-codegen:codegenOutput:189:[[ while (!( == *\
 ]]
+(1) ./stagel-bootstrap-codegen:codegenOutput:192:[[ true == \t\r\u\e ]]
+(0) ./stagel-bootstrap-codegen:codegenOutput:192:[[ while (!( == *\ \ \ \  ]]
+(1) ./stagel-bootstrap-codegen:codegenOutput:196:codegenNewLine=false
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationStart:594:stateStack+=("arglist")
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationStart:643:codegenRoutineType=
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationStart:644:codegenRoutineName=
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationStart:645:codegenArgList=()
+(0) ./stagel-bootstrap-codegen::856:(( i++  ))
+(0) ./stagel-bootstrap-codegen::856:(( i<tokenCount ))
+(0) ./stagel-bootstrap-codegen::857:((  (i+1) % 3  ))
+(0) ./stagel-bootstrap-codegen::856:(( i++  ))
+(0) ./stagel-bootstrap-codegen::856:(( i<tokenCount ))
+(0) ./stagel-bootstrap-codegen::857:((  (i+1) % 3  ))
+(0) ./stagel-bootstrap-codegen::856:(( i++  ))
+(0) ./stagel-bootstrap-codegen::856:(( i<tokenCount ))
+(0) ./stagel-bootstrap-codegen::857:((  (i+1) % 3  ))
+(0) ./stagel-bootstrap-codegen::858:codegenIndent=1
+(0) ./stagel-bootstrap-codegen::862:echo

+(0) ./stagel-bootstrap-codegen::863:codegenStatus='State: arglist:1, token #13 (4:10:1): newline (37):  (38)'
+(0) ./stagel-bootstrap-codegen::864:codegenDebug
+(0) ./stagel-bootstrap-codegen:codegenDebug:201:echo 'State: arglist:1, token #13 (4:10:1): newline (37):  (38) (Debug info: Codegen: , routine : / Args:  / States: root code routine-definition-end code test arglist / Blocks: root  test until / Arglist:  / (true/indent-deferred/true).)'
State: arglist:1, token #13 (4:10:1): newline (37):  (38) (Debug info: Codegen: , routine : / Args:  / States: root code routine-definition-end code test arglist / Blocks: root  test until / Arglist:  / (true/indent-deferred/true).)
+(0) ./stagel-bootstrap-codegen::866:[[ newline == \f\i\l\e\n\a\m\e ]]
+(1) ./stagel-bootstrap-codegen::868:[[ newline == \c\o\m\m\e\n\t ]]
+(1) ./stagel-bootstrap-codegen::871:[[ newline == \l\i\t\e\r\a\l\-\a\b\-\s\t\a\r\t ]]
+(1) ./stagel-bootstrap-codegen::874:[[ newline == \l\i\t\e\r\a\l\-\a\n\-\s\t\a\r\t ]]
+(1) ./stagel-bootstrap-codegen::877:[[ newline == \l\i\t\e\r\a\l\-\a\s\-\s\t\a\r\t ]]
+(1) ./stagel-bootstrap-codegen::881:case "${stateStack[-1]}" in
+(1) ./stagel-bootstrap-codegen::1057:echo 'Working on arglist'
Working on arglist
+(0) ./stagel-bootstrap-codegen::1058:case "${tokens[$i - 1]}" in
+(0) ./stagel-bootstrap-codegen::1124:[[ arglist != \t\e\s\t ]]
+(0) ./stagel-bootstrap-codegen::1127:[[ until != \e\l\s\e ]]
+(0) ./stagel-bootstrap-codegen::1128:codegenCommandInvocationArglist
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:661:codegenDebug 'Command invocation argument list'
+(0) ./stagel-bootstrap-codegen:codegenDebug:201:echo 'State: arglist:1, token #13 (4:10:1): newline (37):  (38) (Debug info: Codegen: Command invocation argument list, routine : / Args: Command invocation argument list / States: root code routine-definition-end code test arglist / Blocks: root  test until / Arglist:  / (true/indent-deferred/true).)'
State: arglist:1, token #13 (4:10:1): newline (37):  (38) (Debug info: Codegen: Command invocation argument list, routine : / Args: Command invocation argument list / States: root code routine-definition-end code test arglist / Blocks: root  test until / Arglist:  / (true/indent-deferred/true).)
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:316:case "$targetLang" in
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:665:argumentCount=0
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:666:codegenLastKnownArglistCount=0
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:667:(( k=0 ))
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:667:(( k<argumentCount ))
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:684:codegenRoutineType=
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:685:codegenRoutineName=
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:686:codegenArgList=()
+(0) ./stagel-bootstrap-codegen::1130:codegenCommandInvocationEnd
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:690:codegenDebug 'Command invocation end'
+(0) ./stagel-bootstrap-codegen:codegenDebug:201:echo 'State: arglist:1, token #13 (4:10:1): newline (37):  (38) (Debug info: Codegen: Command invocation end, routine : / Args: Command invocation end / States: root code routine-definition-end code test arglist / Blocks: root  test until / Arglist:  / (true/indent-deferred/true).)'
State: arglist:1, token #13 (4:10:1): newline (37):  (38) (Debug info: Codegen: Command invocation end, routine : / Args: Command invocation end / States: root code routine-definition-end code test arglist / Blocks: root  test until / Arglist:  / (true/indent-deferred/true).)
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:691:case "$codegenRoutineName" in
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:709:case "$targetLang" in
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:711:[[ test == \c\o\m\m\a\n\d ]]
+(1) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:711:codegenOutput ')'
+(1) ./stagel-bootstrap-codegen:codegenOutput:187:echo '(codegenOutput: ))'
(codegenOutput: ))
+(0) ./stagel-bootstrap-codegen:codegenOutput:188:print ')'
+(0) /usr/bin/ember_bash_setup:print:135:printf %s ')'
+(0) ./stagel-bootstrap-codegen:codegenOutput:189:[[ ) == *\
 ]]
+(1) ./stagel-bootstrap-codegen:codegenOutput:192:[[ true == \t\r\u\e ]]
+(0) ./stagel-bootstrap-codegen:codegenOutput:192:[[ ) == *\ \ \ \  ]]
+(1) ./stagel-bootstrap-codegen:codegenOutput:196:codegenNewLine=false
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:719:contains test root code routine-definition-end code test arglist
+(0) /usr/bin/ember_bash_setup:contains:765:local e
+(0) /usr/bin/ember_bash_setup:contains:766:for e in "${@:2}"
+(0) /usr/bin/ember_bash_setup:contains:766:[[ root == \t\e\s\t ]]
+(1) /usr/bin/ember_bash_setup:contains:766:for e in "${@:2}"
+(1) /usr/bin/ember_bash_setup:contains:766:[[ code == \t\e\s\t ]]
+(1) /usr/bin/ember_bash_setup:contains:766:for e in "${@:2}"
+(1) /usr/bin/ember_bash_setup:contains:766:[[ routine-definition-end == \t\e\s\t ]]
+(1) /usr/bin/ember_bash_setup:contains:766:for e in "${@:2}"
+(1) /usr/bin/ember_bash_setup:contains:766:[[ code == \t\e\s\t ]]
+(1) /usr/bin/ember_bash_setup:contains:766:for e in "${@:2}"
+(1) /usr/bin/ember_bash_setup:contains:766:[[ test == \t\e\s\t ]]
+(0) /usr/bin/ember_bash_setup:contains:766:return 0
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:722:blockStackRemoveLast
+(0) ./stagel-bootstrap-codegen:blockStackRemoveLast:841:print_r root '' test until
+(0) /usr/bin/ember_bash_setup:print_r:222:arr=("$@")
+(0) /usr/bin/ember_bash_setup:print_r:222:local arr
+(0) /usr/bin/ember_bash_setup:print_r:223:declare -p arr
declare -a arr=([0]="root" [1]="" [2]="test" [3]="until")
+(0) ./stagel-bootstrap-codegen:blockStackRemoveLast:842:[[ until == '' ]]
+(0) ./stagel-bootstrap-codegen:blockStackRemoveLast:846:unset 'blockStack[-1]'
+(0) ./stagel-bootstrap-codegen:blockStackRemoveLast:847:[[ test == \r\o\o\t ]]
+(1) ./stagel-bootstrap-codegen:blockStackRemoveLast:848:unset 'blockStack[-1]'
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:723:codegenRoutineType=
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:724:codegenRoutineName=
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:725:codegenArgList=()
+(0) ./stagel-bootstrap-codegen::1131:unset 'stateStack[-1]'
+(0) ./stagel-bootstrap-codegen::1132:i=35
+(0) ./stagel-bootstrap-codegen::1135:[[ test == \t\e\s\t ]]
+(0) ./stagel-bootstrap-codegen::1135:[[ true != \t\r\u\e ]]
+(0) ./stagel-bootstrap-codegen::856:(( i++  ))
+(0) ./stagel-bootstrap-codegen::856:(( i<tokenCount ))
+(0) ./stagel-bootstrap-codegen::857:((  (i+1) % 3  ))
+(0) ./stagel-bootstrap-codegen::856:(( i++  ))
+(0) ./stagel-bootstrap-codegen::856:(( i<tokenCount ))
+(0) ./stagel-bootstrap-codegen::857:((  (i+1) % 3  ))
+(0) ./stagel-bootstrap-codegen::856:(( i++  ))
+(0) ./stagel-bootstrap-codegen::856:(( i<tokenCount ))
+(0) ./stagel-bootstrap-codegen::857:((  (i+1) % 3  ))
+(0) ./stagel-bootstrap-codegen::858:codegenIndent=1
+(0) ./stagel-bootstrap-codegen::862:echo

+(0) ./stagel-bootstrap-codegen::863:codegenStatus='State: test:1, token #13 (4:10:1): newline (37):  (38)'
+(0) ./stagel-bootstrap-codegen::864:codegenDebug
+(0) ./stagel-bootstrap-codegen:codegenDebug:201:echo 'State: test:1, token #13 (4:10:1): newline (37):  (38) (Debug info: Codegen: , routine : / Args:  / States: root code routine-definition-end code test / Blocks: root  / Arglist:  / (true/indent-deferred/true).)'
State: test:1, token #13 (4:10:1): newline (37):  (38) (Debug info: Codegen: , routine : / Args:  / States: root code routine-definition-end code test / Blocks: root  / Arglist:  / (true/indent-deferred/true).)
+(0) ./stagel-bootstrap-codegen::866:[[ newline == \f\i\l\e\n\a\m\e ]]
+(1) ./stagel-bootstrap-codegen::868:[[ newline == \c\o\m\m\e\n\t ]]
+(1) ./stagel-bootstrap-codegen::871:[[ newline == \l\i\t\e\r\a\l\-\a\b\-\s\t\a\r\t ]]
+(1) ./stagel-bootstrap-codegen::874:[[ newline == \l\i\t\e\r\a\l\-\a\n\-\s\t\a\r\t ]]
+(1) ./stagel-bootstrap-codegen::877:[[ newline == \l\i\t\e\r\a\l\-\a\s\-\s\t\a\r\t ]]
+(1) ./stagel-bootstrap-codegen::881:case "${stateStack[-1]}" in
+(1) ./stagel-bootstrap-codegen::1057:echo 'Working on test'
Working on test
+(0) ./stagel-bootstrap-codegen::1058:case "${tokens[$i - 1]}" in
+(0) ./stagel-bootstrap-codegen::1124:[[ test != \t\e\s\t ]]
+(0) ./stagel-bootstrap-codegen::1135:[[ test == \t\e\s\t ]]
+(0) ./stagel-bootstrap-codegen::1135:[[ true != \t\r\u\e ]]
+(0) ./stagel-bootstrap-codegen::856:(( i++  ))
+(0) ./stagel-bootstrap-codegen::856:(( i<tokenCount ))
+(0) ./stagel-bootstrap-codegen::857:((  (i+1) % 3  ))
+(0) ./stagel-bootstrap-codegen::856:(( i++  ))
+(0) ./stagel-bootstrap-codegen::856:(( i<tokenCount ))
+(0) ./stagel-bootstrap-codegen::857:((  (i+1) % 3  ))
+(0) ./stagel-bootstrap-codegen::856:(( i++  ))
+(0) ./stagel-bootstrap-codegen::856:(( i<tokenCount ))
+(0) ./stagel-bootstrap-codegen::857:((  (i+1) % 3  ))
+(0) ./stagel-bootstrap-codegen::858:codegenIndent=1
+(0) ./stagel-bootstrap-codegen::862:echo

+(0) ./stagel-bootstrap-codegen::863:codegenStatus='State: test:1, token #14 (5:10:1): indent (40):  (41)'
+(0) ./stagel-bootstrap-codegen::864:codegenDebug
+(0) ./stagel-bootstrap-codegen:codegenDebug:201:echo 'State: test:1, token #14 (5:10:1): indent (40):  (41) (Debug info: Codegen: , routine : / Args:  / States: root code routine-definition-end code test / Blocks: root  / Arglist:  / (true/indent-deferred/true).)'
State: test:1, token #14 (5:10:1): indent (40):  (41) (Debug info: Codegen: , routine : / Args:  / States: root code routine-definition-end code test / Blocks: root  / Arglist:  / (true/indent-deferred/true).)
+(0) ./stagel-bootstrap-codegen::866:[[ indent == \f\i\l\e\n\a\m\e ]]
+(1) ./stagel-bootstrap-codegen::868:[[ indent == \c\o\m\m\e\n\t ]]
+(1) ./stagel-bootstrap-codegen::871:[[ indent == \l\i\t\e\r\a\l\-\a\b\-\s\t\a\r\t ]]
+(1) ./stagel-bootstrap-codegen::874:[[ indent == \l\i\t\e\r\a\l\-\a\n\-\s\t\a\r\t ]]
+(1) ./stagel-bootstrap-codegen::877:[[ indent == \l\i\t\e\r\a\l\-\a\s\-\s\t\a\r\t ]]
+(1) ./stagel-bootstrap-codegen::881:case "${stateStack[-1]}" in
+(1) ./stagel-bootstrap-codegen::1057:echo 'Working on test'
Working on test
+(0) ./stagel-bootstrap-codegen::1058:case "${tokens[$i - 1]}" in
+(0) ./stagel-bootstrap-codegen::1108:[[ true == \t\r\u\e ]]
+(0) ./stagel-bootstrap-codegen::1109:[[ test == \t\e\s\t ]]
+(0) ./stagel-bootstrap-codegen::1109:testParameterFound=false
+(0) ./stagel-bootstrap-codegen::1111:codegenCommandInvocationArglist
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:661:codegenDebug 'Command invocation argument list'
+(0) ./stagel-bootstrap-codegen:codegenDebug:201:echo 'State: test:1, token #14 (5:10:1): indent (40):  (41) (Debug info: Codegen: Command invocation argument list, routine : / Args: Command invocation argument list / States: root code routine-definition-end code test / Blocks: root  / Arglist:  / (true/indent-deferred/false).)'
State: test:1, token #14 (5:10:1): indent (40):  (41) (Debug info: Codegen: Command invocation argument list, routine : / Args: Command invocation argument list / States: root code routine-definition-end code test / Blocks: root  / Arglist:  / (true/indent-deferred/false).)
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:316:case "$targetLang" in
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:665:argumentCount=0
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:666:codegenLastKnownArglistCount=0
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:667:(( k=0 ))
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:667:(( k<argumentCount ))
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:684:codegenRoutineType=
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:685:codegenRoutineName=
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationArglist:686:codegenArgList=()
+(0) ./stagel-bootstrap-codegen::1112:codegenCommandInvocationEnd
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:690:codegenDebug 'Command invocation end'
+(0) ./stagel-bootstrap-codegen:codegenDebug:201:echo 'State: test:1, token #14 (5:10:1): indent (40):  (41) (Debug info: Codegen: Command invocation end, routine : / Args: Command invocation end / States: root code routine-definition-end code test / Blocks: root  / Arglist:  / (true/indent-deferred/false).)'
State: test:1, token #14 (5:10:1): indent (40):  (41) (Debug info: Codegen: Command invocation end, routine : / Args: Command invocation end / States: root code routine-definition-end code test / Blocks: root  / Arglist:  / (true/indent-deferred/false).)
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:691:case "$codegenRoutineName" in
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:709:case "$targetLang" in
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:711:[[ root == \c\o\m\m\a\n\d ]]
+(1) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:711:codegenOutput ')'
+(1) ./stagel-bootstrap-codegen:codegenOutput:187:echo '(codegenOutput: ))'
(codegenOutput: ))
+(0) ./stagel-bootstrap-codegen:codegenOutput:188:print ')'
+(0) /usr/bin/ember_bash_setup:print:135:printf %s ')'
+(0) ./stagel-bootstrap-codegen:codegenOutput:189:[[ ) == *\
 ]]
+(1) ./stagel-bootstrap-codegen:codegenOutput:192:[[ true == \t\r\u\e ]]
+(0) ./stagel-bootstrap-codegen:codegenOutput:192:[[ ) == *\ \ \ \  ]]
+(1) ./stagel-bootstrap-codegen:codegenOutput:196:codegenNewLine=false
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:719:contains test root code routine-definition-end code test
+(0) /usr/bin/ember_bash_setup:contains:765:local e
+(0) /usr/bin/ember_bash_setup:contains:766:for e in "${@:2}"
+(0) /usr/bin/ember_bash_setup:contains:766:[[ root == \t\e\s\t ]]
+(1) /usr/bin/ember_bash_setup:contains:766:for e in "${@:2}"
+(1) /usr/bin/ember_bash_setup:contains:766:[[ code == \t\e\s\t ]]
+(1) /usr/bin/ember_bash_setup:contains:766:for e in "${@:2}"
+(1) /usr/bin/ember_bash_setup:contains:766:[[ routine-definition-end == \t\e\s\t ]]
+(1) /usr/bin/ember_bash_setup:contains:766:for e in "${@:2}"
+(1) /usr/bin/ember_bash_setup:contains:766:[[ code == \t\e\s\t ]]
+(1) /usr/bin/ember_bash_setup:contains:766:for e in "${@:2}"
+(1) /usr/bin/ember_bash_setup:contains:766:[[ test == \t\e\s\t ]]
+(0) /usr/bin/ember_bash_setup:contains:766:return 0
+(0) ./stagel-bootstrap-codegen:codegenCommandInvocationEnd:722:blockStackRemoveLast
+(0) ./stagel-bootstrap-codegen:blockStackRemoveLast:841:print_r root ''
+(0) /usr/bin/ember_bash_setup:print_r:222:arr=("$@")
+(0) /usr/bin/ember_bash_setup:print_r:222:local arr
+(0) /usr/bin/ember_bash_setup:print_r:223:declare -p arr
declare -a arr=([0]="root" [1]="")
+(0) ./stagel-bootstrap-codegen:blockStackRemoveLast:842:[[ '' == '' ]]
+(0) ./stagel-bootstrap-codegen:blockStackRemoveLast:842:[[ root == \p\l\a\i\n\-\b\l\o\c\k ]]
+(0) ./stagel-bootstrap-codegen:blockStackRemoveLast:846:unset 'blockStack[-1]'
+(0) ./stagel-bootstrap-codegen:blockStackRemoveLast:847:[[ root == \r\o\o\t ]]
+(0) ./stagel-bootstrap-codegen:blockStackRemoveLast:847:die 'Internal error: Trying to remove root block!'
+(0) /usr/bin/ember_bash_setup:die:70:source error-notify 'Internal error: Trying to remove root block!'
++(0) /usr/bin/error-notify:source:10:[[ 1 -eq 0 ]]
++(0) /usr/bin/error-notify:source:14:[[ Internal error: Trying to remove root block! =~ ^-?[0-9]+$ ]]
++(1) /usr/bin/error-notify:source:24:ec=1
++(0) /usr/bin/error-notify:source:26:printf %b '\033[1;31m'
+++(0) /usr/bin/error-notify:source:27:ps -o args= 10690
++(0) /usr/bin/error-notify:source:27:printf '%s\n' 'bash ../../../../scripts/stagel-bootstrap-convert in/in.stagel js'
bash ../../../../scripts/stagel-bootstrap-convert in/in.stagel js
+++(0) /usr/bin/error-notify:source:28:pwd
+++(0) /usr/bin/error-notify:source:28:emdate
+++(0) /usr/bin/error-notify:emdate:4:trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd)."' ERR
++++(0) /usr/bin/error-notify:emdate:6:date +%Y-%m-%d-%H-%M-%S-%N
++++(0) /usr/bin/error-notify:emdate:6:xxd -pu
+++++(0) /usr/bin/error-notify:emdate:6:date +%z
+++(0) /usr/bin/error-notify:emdate:6:temp=2019-05-17-23-00-24-917902229_2d303430300a
+++(0) /usr/bin/error-notify:emdate:7:echo 20190517230024917902229_2d303430300a
++(0) /usr/bin/error-notify:source:28:printf '%s\n' 'failed with the error on /usr/bin/error-notify line 28 in /home/kyan/Ember Library/Ember/ember-information-technology-environment/scripts at 20190517230024917902229_2d303430300a:'
failed with the error on /usr/bin/error-notify line 28 in /home/kyan/Ember Library/Ember/ember-information-technology-environment/scripts at 20190517230024917902229_2d303430300a:
++(0) /usr/bin/error-notify:source:29:printf %s 'Internal error: Trying to remove root block!
'
Internal error: Trying to remove root block!
++(0) /usr/bin/error-notify:source:30:printf %b '\033[0m'
+++(0) /usr/bin/error-notify:source:36:trap
++(0) /usr/bin/error-notify:source:36:save_traps='trap -- '\''die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."'\'' ERR'
++(0) /usr/bin/error-notify:source:37:trap 'eval "$save_traps"; false; exit 1' ERR
++(0) /usr/bin/error-notify:source:38:exit 1
+++(1) /usr/bin/error-notify:source:38:eval 'trap -- '\''die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."'\'' ERR'
++++(1) /usr/bin/error-notify:source:38:trap -- 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."' ERR
+++(0) /usr/bin/error-notify:source:38:false
+++(1) /usr/bin/error-notify:source:38:exit 1
bash ./exec
failed with the error on /usr/bin/error-notify line 28 in /home/kyan/Ember Library/Ember/ember-information-technology-environment/scripts at 20190517230024982604098_2d303430300a:
A fatal error was reported on ../../../../scripts/stagel-bootstrap-convert line 39 in /home/kyan/Ember Library/Ember/ember-information-technology-environment/scripts at 20190518030024932949277U2d303430300a.
bash ./tests/stagel-run-tests
failed with the error on /usr/bin/error-notify line 28 in /home/kyan/Ember Library/Ember/ember-information-technology-environment/tests/stagel/js/routine-fizzbuzz at 20190517230025030204345_2d303430300a:
A fatal error was reported on ./exec line 12 in /home/kyan/Ember Library/Ember/ember-information-technology-environment/tests/stagel/js/routine-fizzbuzz.
Test stagel/js/routine-fizzbuzz failed.
Test stagel/js/logical-or passed.
Test stagel/js/generic-parameter passed.
Test stagel/js/array-s passed.
Test stagel/js/array-zero-only passed.
Test stagel/js/bool-literal passed.
Test stagel/js/str-escape-literal passed.
Test stagel/js/else passed.
Test stagel/js/elif passed.
Test stagel/js/arglist-inline-end passed.
