r/an/dcToHTML an/dcIn
    new an/out
    new n/len
    set n/len count an/dcIn
    new n/inputIndex
    set n/inputIndex 0
    new n/dcAtIndex
    while lt n/inputIndex n/len
        set n/dcAtIndex get an/dcIn n/inputIndex
        # FIXME: doesn't accept HTML-renderable Dcs (then how are they getting rendered?!)
        if or or dcIsNewline n/dcAtIndex } dcIsPrintable n/dcAtIndex } } dcIsSpace n/dcAtIndex
            set an/out push an/out n/dcAtIndex
        set n/InputIndex add n/inputIndex 1
    assertIsDcarr an/out
    return an/out
        case "HTML":
            dcarrOutput = [];
            intInputLength = await intDcarrLength(dcarrInput);
            for (let intInputIndex = 0; intInputIndex < intInputLength; intInputIndex++) {
                let dcAtInputIndex = await get(dcarrInput, intInputIndex);
                //await implLog(await strFrom(dcAtInputIndex));
                if (await dcIsNewline(dcAtInputIndex) || await dcIsPrintable(dcAtInputIndex) || await dcIsSpace(dcAtInputIndex)) {
                    await dcarrOutput.push(dcAtInputIndex);
                    //await implLog(await strPrintArr(dcarrOutput));
                }
            }
