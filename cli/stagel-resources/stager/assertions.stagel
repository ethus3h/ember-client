r/v/assertIsByte n/in
    new b/temp
    set b/temp le n/in 255
    new s/in
    set s/in strFromInt n/in
    if not and b/temp ge n/in 0
        assertionFailed cat s/in ' is not a byte.'

r/v/assertIsArray ga/in
    # Just a convenience wrapper
    assertIsGenericArray ga/in

r/v/assertIsChar s/in
    if ne 1 len s/in
        assertionFailed cat s/in ' is not a character.'

r/v/assertIsCharByte n/in
    assertTrue intIsBetween 32 126

r/v/assertStrContainsOnlyInt s/in
    # Positive int, specifically. Only digits allowed.
    new n/temp
    set n/temp len s/in
    new n/i
    set n/i 0
    while lt n/i n/temp
        if not asciiIsDigit byteFromChar strCharAtPos s/in n/i
            assertionFailed cat s/in ' does not only contain an integer.'
        set n/i add n/i 1

r/v/assertIsNonnegative n/in
    if lt n/in 0
        new s/temp
        set s/temp strFromInt n/in
        assertionFailed cat s/temp ' is negative.'

r/v/assertIsDc n/in
    assertIsNonnegative n/in
