# This file contains the public interface for EITE.

# If you just want to run EITE, use the following function.

r/v/startEite
    # Start EITE, using the default startup document. Does not return while EITE is still running.
    # loadAndRun ...

# If you want to run a different document, you can call loadAndRun with the format of the document to open and its location.

r/v/loadAndRun s/format s/path
    # Load and run the specified document. Does not return while the document is still running.
    runDocument loadDocument s/format s/path

# If you want to convert a document to another format, you can call loadAndConvert with the format of the document, its location, and the format you want the results in.

r/v/loadAndConvert s/inputFormat s/path s/outputFormat
    # Load the specified document, and return it converted to the specified outputFormat.
    convertDocument loadDocument s/inputFormat s/path

# To operate on a document you already have as a 

r/an/loadDocument s/format s/path
    assertIsSupportedInputFormat s/format
    # Load and return the specified document as a Dc array.
    setupIfNeeded
    internalLoadDocument s/format s/path

r/v/runDocument an/contents
    # Run the specified document. Does not return while the document is still running. Takes care of events and I/O automatically.
    internalRunDocument an/contents

r/an/convertDocument an/contents s/format
    assertIsSupportedOutputFormat s/format
    # Convert a document to the specified format, and return it as an array of bytes.
    setupIfNeeded

# If you want more control over the document loading and execution, you can use these lower-level functions.

r/an/loadDocument s/format s/path
    assertIsSupportedInputFormat s/format
    # Load and return the specified document as a Dc array.
    setupIfNeeded
    internalLoadDocument s/format s/path

r/s/startDocument an/contents
    # Start execution of the provided document and return an ID for it. FIXME: should that ID be string or be num?
    setupIfNeeded

r/as/getDesiredEventNotifications as/documentId
    # Return list of event types (e.g. keystrokes, mouse movement, elapsed time) that the document wants to be notified of.

r/an/sendEvent as/documentId an/eventData
    # Send the provided event or events data to the specified document.

r/an/getDocumentFrame as/documentId s/format
    assertIsSupportedOutputFormat s/format
    # Return the most recently available output for the given document in the requested format.
